/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

/**
 *
 * @author Jorge F
 */
public class frmReporteHistorial extends javax.swing.JPanel {

    /**
     * Creates new form frmReporteRanking
     */
    public frmReporteHistorial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnExcel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnQuery = new javax.swing.JButton();

        panelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("REPORTE DE FRECUENCIAS");
        panelFondo.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, -1, -1));

        jLabel2.setText("Resultado de consulta");
        panelFondo.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, -1, -1));

        btnExcel.setText("Exportar a hoja de cálculo");
        btnExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelActionPerformed(evt);
            }
        });
        panelFondo.add(btnExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, 172, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        panelFondo.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 740, 170));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Opciones de configuración"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Tipo de reporte:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 25, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Historial de planes de vuelo realizados", "Lista de vuelos según aeropuerto", "Frecuencia de vuelos usados en planes de vuelo", "Frecuencia de movimientos de paquetes en zonas geográficas", " " }));
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 22, 280, -1));

        btnQuery.setText("Realizar consulta");
        btnQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQueryActionPerformed(evt);
            }
        });
        jPanel1.add(btnQuery, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, 180, -1));

        panelFondo.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 740, 160));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelActionPerformed
//        excelExport controlerExcel = new excelExport();
//        controlerExcel.excelExportPaquetes(filter);
    }//GEN-LAST:event_btnExcelActionPerformed

    private void btnQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQueryActionPerformed
        String query = "";
        /* Identificar el tipo */
        switch(cboTipo.getSelectedIndex()*10+cboDiv.getSelectedIndex()){
            case 0:
            query += "SELECT n.codigo AS Codigo, n.nombre AS Nombre, count(d.id_aeropuerto_emisor) AS Frecuencia "+
            "FROM redexdb.pais as p, redexdb.pedido as d, redexdb.aeropuerto as a, redexdb.ciudad as c, redexdb.continente as n "+
            "WHERE a.id = d.id_aeropuerto_emisor AND a.id_ciudad = c.id AND p.id = c.id_pais AND n.id = p.id_continente "+
            "GROUP BY d.id_aeropuerto_emisor ORDER BY count(1) ";
            break;
            case 1:
            query += "SELECT p.codigo AS Codigo, p.nombre AS Nombre, count(d.id_aeropuerto_emisor) AS Frecuencia "+
            "FROM redexdb.pais as p, redexdb.pedido as d, redexdb.aeropuerto as a, redexdb.ciudad as c "+
            "WHERE a.id = d.id_aeropuerto_emisor AND a.id_ciudad = c.id AND p.id = c.id_pais "+
            "GROUP BY d.id_aeropuerto_emisor ORDER BY count(1) ";
            break;
            case 2:
            query += "SELECT c.codigo AS Codigo, c.nombre AS Nombre, count(d.id_aeropuerto_emisor) AS Frecuencia "+
            "FROM redexdb.pedido as d, redexdb.aeropuerto as a, redexdb.ciudad as c "+
            "WHERE a.id = d.id_aeropuerto_emisor AND a.id_ciudad = c.id "+
            "GROUP BY d.id_aeropuerto_emisor ORDER BY count(1) ";
            break;
            case 3:
            query += "SELECT a.codigo AS Codigo, a.nombre AS Nombre, count(d.id_aeropuerto_emisor) AS Frecuencia "+
            "FROM redexdb.pedido as d, redexdb.aeropuerto as a "+
            "WHERE a.id = d.id_aeropuerto_emisor "+
            "GROUP BY d.id_aeropuerto_emisor ORDER BY count(1) ";
            break;
            case 10:
            break;
            case 11:
            break;
            case 12:
            break;
            case 13:
            break;
        }
        switch(cboOrden.getSelectedIndex()){
            case 0:
            query += "desc";
            break;
            case 1:
            query += "asc";
            break;
        }
        switch(cboFrec.getSelectedIndex()){
            case 0:
            query += " LIMIT 1;";
            break;
            case 1:
            query += " LIMIT 2;";
            break;
            case 2:
            query += " LIMIT 5;";
            break;
            case 3:
            query += " LIMIT 10;";
            break;
            default:
            query += " LIMIT 20;";
            break;
        }
        System.out.println(query);
        ArrayList<ArrayList<String>> lista = consulta.hacerConsulta(query);
        // Colocando en la tabla
        DefaultTableModel modelo = (DefaultTableModel) tblConsulta.getModel();
        int tamanho = modelo.getRowCount();
        for(int i=0; i<tamanho; i++){
            modelo.removeRow(0);
        }
        Object[] obj = new Object[3];
        System.out.println(lista.size());
        for(int i = 0; i < lista.size(); i++){
            obj[0] = lista.get(i).get(0);
            obj[1] = lista.get(i).get(1);
            obj[2] = lista.get(i).get(2);
            modelo.addRow(obj);
        }
    }//GEN-LAST:event_btnQueryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcel;
    private javax.swing.JButton btnQuery;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel panelFondo;
    // End of variables declaration//GEN-END:variables
}
